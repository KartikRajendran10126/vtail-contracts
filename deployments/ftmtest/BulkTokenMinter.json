{
  "address": "0x2C130b5bB7429B65D6eb1FFE4CD8924AE1382fFf",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "controllerAddress",
          "type": "address"
        }
      ],
      "name": "ControllerRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "gquantities",
          "type": "uint256[]"
        }
      ],
      "name": "bulkMintGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "multitoken",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "tokenHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "quantities",
          "type": "uint256[]"
        }
      ],
      "name": "bulkMintToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relinquishControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xeddc84d36889f32970779d834108e5797b4fdfca1189ff5b2633d32f6e4bac1d",
  "receipt": {
    "to": null,
    "from": "0xE5E82ae456c04Ad0879785B4f678A4Fcace12AAf",
    "contractAddress": "0x2C130b5bB7429B65D6eb1FFE4CD8924AE1382fFf",
    "transactionIndex": 0,
    "gasUsed": "491785",
    "logsBloom": "0x
    "blockHash": "0x00000c49000001c69fb12303204fd2804fdb62e3f5bb1468962ced5aabb5f77d",
    "transactionHash": "0xeddc84d36889f32970779d834108e5797b4fdfca1189ff5b2633d32f6e4bac1d",
    "logs": [],
    "blockNumber": 985151,
    "cumulativeGasUsed": "491785",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1c25a8abf6ef90385cc04e5ab5ac21c1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controllerAddress\",\"type\":\"address\"}],\"name\":\"ControllerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"gquantities\",\"type\":\"uint256[]\"}],\"name\":\"bulkMintGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"multitoken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"tokenHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"bulkMintToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relinquishControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Collection of utility functions that mint tokens\",\"kind\":\"dev\",\"methods\":{\"addController(address)\":{\"details\":\"Add an address allowed to control this contract\"},\"bulkMintGov(address,address[],uint256[])\":{\"details\":\"Mint governance to recipients\"},\"bulkMintToken(address,address[],uint256,uint256[])\":{\"details\":\"Mint one token hash type to multiple accounts with multiple quantities\"},\"isController(address)\":{\"details\":\"Check if this address is a controller\"},\"relinquishControl()\":{\"details\":\"Remove the sender address from the list of controllers\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/BulkTokenMinter.sol\":\"BulkTokenMinter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2200},\"remappings\":[]},\"sources\":{\"src/access/Controllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\nimport \\\"../interfaces/IControllable.sol\\\";\\n\\nabstract contract Controllable is IControllable {\\n    mapping(address => bool) internal _controllers;\\n\\n    /**\\n     * @dev Throws if called by any account not in authorized list\\n     */\\n    modifier onlyController() {\\n        require(\\n            _controllers[msg.sender] == true || address(this) == msg.sender,\\n            \\\"Controllable: caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function _addController(address _controller) internal {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Add an address allowed to control this contract\\n     */\\n    function addController(address _controller)\\n        external\\n        override\\n        onlyController\\n    {\\n        _controllers[_controller] = true;\\n    }\\n\\n    /**\\n     * @dev Check if this address is a controller\\n     */\\n    function isController(address _address)\\n        external\\n        view\\n        override\\n        returns (bool allowed)\\n    {\\n        allowed = _controllers[_address];\\n    }\\n\\n    /**\\n     * @dev Remove the sender address from the list of controllers\\n     */\\n    function relinquishControl() external override onlyController {\\n        delete _controllers[msg.sender];\\n    }\\n}\\n\",\"keccak256\":\"0xa31f752b3b092c788ea06a6dced266db79c4407d69733d78bc15e519f39e1d3f\",\"license\":\"MIT\"},\"src/interfaces/IBulkTokenMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IBulkTokenMinter {\\n    function bulkMintGov(\\n        address multitoken,\\n        address[] memory recipients,\\n        uint256[] memory gquantities\\n    ) external;\\n\\n    function bulkMintToken(\\n        address multitoken,\\n        address[] memory recipients,\\n        uint256 tokenHash,\\n        uint256[] memory quantities\\n    ) external;\\n}\\n\",\"keccak256\":\"0x973fb71ed5b7696cc973d4107d7af329bb36563dc1aec4bf278d90733d2d5cd7\",\"license\":\"MIT\"},\"src/interfaces/IControllable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\ninterface IControllable {\\n    event ControllerAdded(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n    event ControllerRemoved(\\n        address indexed contractAddress,\\n        address indexed controllerAddress\\n    );\\n\\n    function addController(address controller) external;\\n\\n    function isController(address controller) external view returns (bool);\\n\\n    function relinquishControl() external;\\n}\\n\",\"keccak256\":\"0x2a44548d9ba1bcd73d5734b2265db6c1556c013ccc61df621a6cbd5cca42cfaf\",\"license\":\"MIT\"},\"src/interfaces/INFTGemMultiToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface INFTGemMultiToken {\\n    enum TokenType {\\n        GOVERNANCE,\\n        CLAIM,\\n        GEM\\n    }\\n\\n    // called by controller to mint a claim or a gem\\n    function mint(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    // called by controller to mint a claim or a gem\\n    function mintBatch(\\n        address to,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    function burnBatch(\\n        address account,\\n        uint256[] memory ids,\\n        uint256[] memory amounts\\n    ) external;\\n\\n    // called by controller to burn a claim\\n    function burn(\\n        address account,\\n        uint256 tokenHash,\\n        uint256 amount\\n    ) external;\\n\\n    function heldTokens(address holder)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    function allHeldTokens(address holder, uint256 _idx)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function allHeldTokensLength(address holder)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function tokenHolders(uint256 _token)\\n        external\\n        view\\n        returns (address[] memory);\\n\\n    function allTokenHolders(uint256 _token, uint256 _idx)\\n        external\\n        view\\n        returns (address);\\n\\n    function allTokenHoldersLength(uint256 _token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function totalBalances(uint256 _id) external view returns (uint256);\\n\\n    function allProxyRegistries(uint256 _idx) external view returns (address);\\n\\n    function allProxyRegistriesLength() external view returns (uint256);\\n\\n    function addProxyRegistry(address registry) external;\\n\\n    function removeProxyRegistryAt(uint256 index) external;\\n\\n    function getRegistryManager() external view returns (address);\\n\\n    function setRegistryManager(address newManager) external;\\n\\n    function lock(uint256 token, uint256 timeframe) external;\\n\\n    function unlockTime(address account, uint256 token)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function setTokenData(\\n        uint256 tokenHash,\\n        TokenType tokenType,\\n        address tokenPool\\n    ) external;\\n\\n    function getTokenData(uint256 tokenHash)\\n        external\\n        view\\n        returns (TokenType, address);\\n}\\n\",\"keccak256\":\"0xb871feba8e614aab0f81f26db323a68649f8d1cf6641848984e821a7bc02e7a1\",\"license\":\"MIT\"},\"src/utils/BulkTokenMinter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0;\\n\\nimport \\\"../access/Controllable.sol\\\";\\n\\nimport \\\"../interfaces/INFTGemMultiToken.sol\\\";\\nimport \\\"../interfaces/IBulkTokenMinter.sol\\\";\\n\\n/**\\n * @dev Collection of utility functions that mint tokens\\n */\\ncontract BulkTokenMinter is IBulkTokenMinter, Controllable {\\n    constructor() {\\n        _addController(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Mint one token hash type to multiple accounts with multiple quantities\\n     */\\n    function bulkMintToken(\\n        address multitoken,\\n        address[] memory recipients,\\n        uint256 tokenHash,\\n        uint256[] memory quantities\\n    ) external override onlyController {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            INFTGemMultiToken(multitoken).mint(\\n                recipients[i],\\n                tokenHash,\\n                quantities[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Mint governance to recipients\\n     */\\n    function bulkMintGov(\\n        address multitoken,\\n        address[] memory recipients,\\n        uint256[] memory gquantities\\n    ) external override onlyController {\\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            INFTGemMultiToken(multitoken).mint(\\n                recipients[i],\\n                0,\\n                gquantities[i]\\n            );\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5600fab069db1869cb9fb157cb5486ea91393907cb740efbd0abfd46eae2705f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b610043565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b61078c806100526000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063d4f2adbb11610050578063d4f2adbb146100aa578063e1c28bef146100bd578063f06efa59146100c557610067565b8063a7fc7a071461006c578063b429afeb14610081575b600080fd5b61007f61007a36600461050a565b6100d8565b005b61009461008f36600461050a565b610150565b6040516100a19190610645565b60405180910390f35b61007f6100b836600461052b565b61017b565b61007f61029c565b61007f6100d336600461059c565b6102f3565b3360009081526020819052604090205460ff161515600114806100fa57503033145b61011f5760405162461bcd60e51b815260040161011690610650565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061019d57503033145b6101b95760405162461bcd60e51b815260040161011690610650565b60005b8251811015610296578373ffffffffffffffffffffffffffffffffffffffff1663156e29f684838151811061020157634e487b7160e01b600052603260045260246000fd5b6020026020010151600085858151811061022b57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161025193929190610617565b600060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50505050808061028e906106fb565b9150506101bc565b50505050565b3360009081526020819052604090205460ff161515600114806102be57503033145b6102da5760405162461bcd60e51b815260040161011690610650565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460ff1615156001148061031557503033145b6103315760405162461bcd60e51b815260040161011690610650565b60005b835181101561040d578473ffffffffffffffffffffffffffffffffffffffff1663156e29f685838151811061037957634e487b7160e01b600052603260045260246000fd5b6020026020010151858585815181106103a257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016103c893929190610617565b600060405180830381600087803b1580156103e257600080fd5b505af11580156103f6573d6000803e3d6000fd5b505050508080610405906106fb565b915050610334565b5050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461043857600080fd5b919050565b600082601f83011261044d578081fd5b8135602061046261045d836106d7565b6106ad565b828152818101908583018385028701840188101561047e578586fd5b855b858110156104a35761049182610414565b84529284019290840190600101610480565b5090979650505050505050565b600082601f8301126104c0578081fd5b813560206104d061045d836106d7565b82815281810190858301838502870184018810156104ec578586fd5b855b858110156104a3578135845292840192908401906001016104ee565b60006020828403121561051b578081fd5b61052482610414565b9392505050565b60008060006060848603121561053f578182fd5b61054884610414565b9250602084013567ffffffffffffffff80821115610564578384fd5b6105708783880161043d565b93506040860135915080821115610585578283fd5b50610592868287016104b0565b9150509250925092565b600080600080608085870312156105b1578081fd5b6105ba85610414565b9350602085013567ffffffffffffffff808211156105d6578283fd5b6105e28883890161043d565b94506040870135935060608701359150808211156105fe578283fd5b5061060b878288016104b0565b91505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff811182821017156106cf576106cf610740565b604052919050565b600067ffffffffffffffff8211156106f1576106f1610740565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561073957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e27adedfb7ed73b3d152e60eeca7aee939abe7dad21be22e2028a9794e03e52864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063d4f2adbb11610050578063d4f2adbb146100aa578063e1c28bef146100bd578063f06efa59146100c557610067565b8063a7fc7a071461006c578063b429afeb14610081575b600080fd5b61007f61007a36600461050a565b6100d8565b005b61009461008f36600461050a565b610150565b6040516100a19190610645565b60405180910390f35b61007f6100b836600461052b565b61017b565b61007f61029c565b61007f6100d336600461059c565b6102f3565b3360009081526020819052604090205460ff161515600114806100fa57503033145b61011f5760405162461bcd60e51b815260040161011690610650565b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff166000908152602081905260409020805460ff19166001179055565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b3360009081526020819052604090205460ff1615156001148061019d57503033145b6101b95760405162461bcd60e51b815260040161011690610650565b60005b8251811015610296578373ffffffffffffffffffffffffffffffffffffffff1663156e29f684838151811061020157634e487b7160e01b600052603260045260246000fd5b6020026020010151600085858151811061022b57634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b815260040161025193929190610617565b600060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50505050808061028e906106fb565b9150506101bc565b50505050565b3360009081526020819052604090205460ff161515600114806102be57503033145b6102da5760405162461bcd60e51b815260040161011690610650565b336000908152602081905260409020805460ff19169055565b3360009081526020819052604090205460ff1615156001148061031557503033145b6103315760405162461bcd60e51b815260040161011690610650565b60005b835181101561040d578473ffffffffffffffffffffffffffffffffffffffff1663156e29f685838151811061037957634e487b7160e01b600052603260045260246000fd5b6020026020010151858585815181106103a257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518463ffffffff1660e01b81526004016103c893929190610617565b600060405180830381600087803b1580156103e257600080fd5b505af11580156103f6573d6000803e3d6000fd5b505050508080610405906106fb565b915050610334565b5050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461043857600080fd5b919050565b600082601f83011261044d578081fd5b8135602061046261045d836106d7565b6106ad565b828152818101908583018385028701840188101561047e578586fd5b855b858110156104a35761049182610414565b84529284019290840190600101610480565b5090979650505050505050565b600082601f8301126104c0578081fd5b813560206104d061045d836106d7565b82815281810190858301838502870184018810156104ec578586fd5b855b858110156104a3578135845292840192908401906001016104ee565b60006020828403121561051b578081fd5b61052482610414565b9392505050565b60008060006060848603121561053f578182fd5b61054884610414565b9250602084013567ffffffffffffffff80821115610564578384fd5b6105708783880161043d565b93506040860135915080821115610585578283fd5b50610592868287016104b0565b9150509250925092565b600080600080608085870312156105b1578081fd5b6105ba85610414565b9350602085013567ffffffffffffffff808211156105d6578283fd5b6105e28883890161043d565b94506040870135935060608701359150808211156105fe578283fd5b5061060b878288016104b0565b91505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b901515815260200190565b60208082526028908201527f436f6e74726f6c6c61626c653a2063616c6c6572206973206e6f74206120636f60408201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff811182821017156106cf576106cf610740565b604052919050565b600067ffffffffffffffff8211156106f1576106f1610740565b5060209081020190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561073957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e27adedfb7ed73b3d152e60eeca7aee939abe7dad21be22e2028a9794e03e52864736f6c63430008000033",
  "libraries": {
    "Strings": "0xFa512c40BEE39549a142a1fB98e8aaa372Df39d0",
    "AddressSet": "0x559C4e3D1740ed87B8f6bA71D9333457c09637Bf",
    "UInt256Set": "0x6856b7A1eA4fA03A30c4BE254cD9B52b9F5EF9a1",
    "Create2": "0x0Aa7dAF27720622afdcC0C898ee0C4e0D4c7f461",
    "WrappedTokenLib": "0x07409045Ffd6C5447CaFd8317C1961e8E5FE06bc",
    "ComplexPoolLib": "0x0D93291B8e51b5F076652eE0425369650732f34E"
  },
  "devdoc": {
    "details": "Collection of utility functions that mint tokens",
    "kind": "dev",
    "methods": {
      "addController(address)": {
        "details": "Add an address allowed to control this contract"
      },
      "bulkMintGov(address,address[],uint256[])": {
        "details": "Mint governance to recipients"
      },
      "bulkMintToken(address,address[],uint256,uint256[])": {
        "details": "Mint one token hash type to multiple accounts with multiple quantities"
      },
      "isController(address)": {
        "details": "Check if this address is a controller"
      },
      "relinquishControl()": {
        "details": "Remove the sender address from the list of controllers"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4752,
        "contract": "src/utils/BulkTokenMinter.sol:BulkTokenMinter",
        "label": "_controllers",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}